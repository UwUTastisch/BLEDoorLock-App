name: Flutter

on:
  push:
    branches: [ "master", "development" ]
  pull_request:
    branches: [ "master" ]

jobs:
  createRelease:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Set up job
        run: |
          TAG_NAME=$(date +'%Y%m%d%H%M%S')
          echo "TAG_NAME=${TAG_NAME}" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false

  buildAndroid:
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
      - name: Create key.properties
        run: | 
          echo "${{ secrets.KEYSTORE_BASE64 }}" > /temp/keystore_base64
          echo "SHA256 of base64 keystore -> $(sha256sum /temp/key_base64/)"  
          base64 -d /temp/keystore_base64 > /temp/release-key.jks
          echo "storeFile=/temp/release-key.jks" > android/key.properties
          echo "SHA256 of storeFile -> $(sha256sum $storeFile)"
          echo "storePassword=${{ secrets.STORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin' # Optional, defaults to 'adopt'
          java-version: '17'

      - name: Set up Flutter
        if: github.ref == 'refs/heads/master'
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
          pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache of dart pub get dependencies
          pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
          #flutter-version-file: pubspec.yaml # path to pubspec.yaml
      - name: Set up Flutter
        if: github.ref != 'refs/heads/master'
        uses: subosito/flutter-action@v2
        with:
          channel: stable
      - run: flutter doctor -v
      - run: flutter pub get
      - run: flutter build apk
      - run: flutter build appbundle

      - name: Print outputs
        shell: bash
        run: |
          echo CACHE-PATH=${{ steps.flutter-action.outputs.CACHE-PATH }}
          echo CACHE-KEY=${{ steps.flutter-action.outputs.CACHE-KEY }}
          echo CHANNEL=${{ steps.flutter-action.outputs.CHANNEL }}
          echo VERSION=${{ steps.flutter-action.outputs.VERSION }}
          echo ARCHITECTURE=${{ steps.flutter-action.outputs.ARCHITECTURE }}
          echo PUB-CACHE-PATH=${{ steps.flutter-action.outputs.PUB-CACHE-PATH }}
          echo PUB-CACHE-KEY=${{ steps.flutter-action.outputs.PUB-CACHE-KEY }}

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: andorid-Ble_Doorlock_Opener.apk
          path: build/app/outputs/flutter-apk/app-release.apk


  publishAPK:
    runs-on: ubuntu-latest
    needs: [buildAndroid, createRelease]
    steps:
      - name: Set up job
        run: |
          echo "RELEASE_UPLOAD_URL=${{ needs.createRelease.outputs.release_upload_url }}" >> $GITHUB_ENV

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: andorid-Ble_Doorlock_Opener.apk
          path: build/app/outputs/flutter-apk/

      - name: Publish APK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path: build/app/outputs/flutter-apk/app-release.apk
          asset_name: Android-Ble_Doorlock_Opener.apk
          asset_content_type: application/vnd.android.package-archive

  buildIos:
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache-key: "flutter-:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache
          cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
          pub-cache-key: "flutter-pub:os:-:channel:-:version:-:arch:-:hash:" # optional, change this to force refresh cache of dart pub get dependencies
          pub-cache-path: "${{ runner.tool_cache }}/flutter/:channel:-:version:-:arch:" # optional, change this to specify the cache path
          #flutter-version-file: pubspec.yaml # path to pubspec.yaml

      - run: flutter pub get
      - run: flutter build ios --release --no-codesign

      - name: Print outputs
        shell: bash
        run: |
          echo CACHE-PATH=${{ steps.flutter-action.outputs.CACHE-PATH }}
          echo CACHE-KEY=${{ steps.flutter-action.outputs.CACHE-KEY }}
          echo CHANNEL=${{ steps.flutter-action.outputs.CHANNEL }}
          echo VERSION=${{ steps.flutter-action.outputs.VERSION }}
          echo ARCHITECTURE=${{ steps.flutter-action.outputs.ARCHITECTURE }}
          echo PUB-CACHE-PATH=${{ steps.flutter-action.outputs.PUB-CACHE-PATH }}
          echo PUB-CACHE-KEY=${{ steps.flutter-action.outputs.PUB-CACHE-KEY }}

      - name: Zip IOS App
        run: zip -r build/ios/iphoneos/Runner.zip build/ios/iphoneos/Runner.app

      - name: Upload IOS-ZIP
        uses: actions/upload-artifact@v4
        with:
          name: IOS-Runner-Ble_Doorlock_Opener.zip
          path: build/ios/iphoneos/Runner.zip

      - run: flutter build ipa
      - name: Upload IOS-IPA
        uses: actions/upload-artifact@v4
        with:
          name: IOS-App-Ble_Doorlock_Opener-app.ipa
          path: build/ios/ipa/ble_doorlock_opener.ipa

  publishIOS:
    runs-on: macos-latest
    needs: [buildIos, createRelease]
    steps:
      - name: Set up job
        run: |
          echo "RELEASE_UPLOAD_URL=${{ needs.createRelease.outputs.release_upload_url }}" >> $GITHUB_ENV

      - name: Download IOS App Zip
        uses: actions/download-artifact@v4
        with:
          name: IOS-Runner-Ble_Doorlock_Opener.zip
          path: build/ios/iphoneos/

      - name: Publish IOS App Zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path: build/ios/iphoneos/Runner.zip
          asset_name: IOS-Runner-Ble_Doorlock_Opener.zip
          asset_content_type: application/zip

      - name: Download IPA
        uses: actions/download-artifact@v4
        with:
          name: IOS-App-Ble_Doorlock_Opener-app.ipa
          path: build/ios/ipa/

      - name: Publish IPA
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.RELEASE_UPLOAD_URL }}
          asset_path: build/ios/ipa/ble_doorlock_opener.ipa
          asset_name: IOS-App-Ble_Doorlock_Opener-app.ipa
          asset_content_type: application/zip
